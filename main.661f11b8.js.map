{"version":3,"sources":["scripts/main.js"],"names":["controls","document","querySelector","scoreInfo","rows","querySelectorAll","msgStart","msgWin","msgLose","insertAdjacentHTML","startBtn","restartBtn","game","isRunning","isWon","isLost","score","rowsQty","length","colsQty","children","matrix","moves","moveRight","forEach","row","num","index","splice","unshift","i","sum","moveLeft","push","moveUp","reflectedMatrix","reflectMatrix","shiftedUpMatrix","moveDown","shiftedDownMatrix","checkDirections","nums","n","restHasNums","slice","some","createMatrix","renderNums","rowIndex","cellValue","cellIndex","renderedCell","className","textContent","classList","add","addNum","Math","random","floor","col","toggleHidden","block","dependence","toggle","columns","checkVictory","has2048","processVictory","checkLose","variant","processLose","addEventListener","e","key","startsWith","event","preventDefault","moveDirection","replace"],"mappings":"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","file":"main.661f11b8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst controls = document.querySelector('.controls');\nconst scoreInfo = document.querySelector('.game-score');\n\nconst rows = document.querySelectorAll('.field-row');\n\nconst msgStart = document.querySelector('.message-start');\nconst msgWin = document.querySelector('.message-win');\nconst msgLose = document.querySelector('.message-lose');\n\ncontrols.insertAdjacentHTML('beforeend', `\n  <button\n    class=\"button restart hidden\"\n    >Restart\n  </button>\n`);\n\nconst startBtn = document.querySelector('.start');\nconst restartBtn = document.querySelector('.restart');\n\nconst game = {\n  isRunning: false,\n  isWon: false,\n  isLost: false,\n  score: 0,\n  rowsQty: rows.length,\n  colsQty: rows[0].children.length,\n  matrix: [],\n};\n\nconst moves = {\n  moveRight(matrix) {\n    matrix.forEach(row => {\n      row.forEach((num, index) => {\n        if (num === 0) {\n          row.splice(index, 1);\n          row.unshift(0);\n        }\n      });\n\n      for (let i = row.length - 1; i >= 0; i--) {\n        if (row[i] > 0 && row[i] === row[i - 1]) {\n          const sum = row[i] * 2;\n\n          row.splice(i - 1, 2, sum);\n          row.unshift(0);\n          game.score += sum;\n        }\n      }\n    });\n  },\n\n  moveLeft(matrix) {\n    matrix.forEach(row => {\n      for (let i = row.length - 1; i >= 0; i--) {\n        if (row[i] === 0) {\n          row.splice(i, 1);\n          row.push(0);\n        }\n      }\n\n      for (let i = 0; i < row.length; i++) {\n        if (row[i] > 0 && row[i] === row[i + 1]) {\n          const sum = row[i] * 2;\n\n          row.splice(i, 2, sum);\n          row.push(0);\n          game.score += sum;\n        }\n      }\n    });\n  },\n\n  moveUp(matrix) {\n    const reflectedMatrix = reflectMatrix(matrix);\n\n    this.moveLeft(reflectedMatrix);\n\n    const shiftedUpMatrix = reflectMatrix(reflectedMatrix);\n\n    game.matrix = shiftedUpMatrix;\n  },\n\n  moveDown(matrix) {\n    const reflectedMatrix = reflectMatrix(matrix);\n\n    this.moveRight(reflectedMatrix);\n\n    const shiftedDownMatrix = reflectMatrix(reflectedMatrix);\n\n    game.matrix = shiftedDownMatrix;\n  },\n};\n\nconst checkDirections = {\n  moveLeft(matrix) {\n    for (let i = 0; i < matrix.length; i++) {\n      const nums = matrix[i];\n\n      for (let n = 0; n < nums.length; n++) {\n        if (nums[n] !== 0 && nums[n] === nums[n + 1]) {\n          return true;\n        }\n\n        let restHasNums = false;\n\n        if (nums[n] === 0) {\n          const rest = nums.slice(n);\n\n          restHasNums = rest.some(num => num > 0);\n        }\n\n        if (restHasNums) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  moveRight(matrix) {\n    for (let i = 0; i < matrix.length; i++) {\n      const nums = matrix[i];\n\n      for (let n = nums.length; n >= 0; n--) {\n        if (nums[n] !== 0 && nums[n] === nums[n - 1]) {\n          return true;\n        }\n\n        let restHasNums = false;\n\n        if (nums[n] === 0) {\n          const rest = nums.slice(0, n);\n\n          restHasNums = rest.some(num => num > 0);\n        }\n\n        if (restHasNums) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  moveUp(matrix) {\n    const reflectedMatrix = reflectMatrix(matrix);\n\n    return this.moveLeft(reflectedMatrix);\n  },\n\n  moveDown(matrix) {\n    const reflectedMatrix = reflectMatrix(matrix);\n\n    return this.moveRight(reflectedMatrix);\n  },\n};\n\nstartBtn.addEventListener('click', () => {\n  game.isRunning = true;\n  game.isWon = false;\n  game.score = 0;\n  toggleHidden(startBtn, game.isRunning);\n  toggleHidden(restartBtn, !game.isRunning);\n  toggleHidden(msgStart, game.isRunning);\n  toggleHidden(msgWin, game.isRunning);\n  createMatrix();\n  addNum();\n  addNum();\n  renderNums();\n});\n\nrestartBtn.addEventListener('click', () => {\n  game.isRunning = true;\n  game.isLost = false;\n  game.score = 0;\n  toggleHidden(msgLose, !game.isLost);\n  createMatrix();\n  addNum();\n  addNum();\n  renderNums();\n});\n\ndocument.addEventListener('keydown', e => {\n  const key = e.key;\n\n  if (!key.startsWith('Arrow') || !game.isRunning) {\n    return;\n  }\n  event.preventDefault();\n\n  const moveDirection = key.replace('Arrow', 'move');\n  const moveIsPossible = checkDirections[moveDirection](game.matrix);\n\n  if (!moveIsPossible) {\n    return;\n  }\n\n  moves[moveDirection](game.matrix);\n\n  addNum();\n  renderNums();\n\n  if (checkVictory(game.matrix)) {\n    processVictory();\n  }\n\n  if (checkLose(game.matrix)) {\n    processLose();\n  }\n});\n\nfunction createMatrix() {\n  const matrix = [];\n\n  for (let i = 0; i < game.rowsQty; i++) {\n    matrix.push([]);\n\n    for (let n = 0; n < game.colsQty; n++) {\n      matrix[i][n] = 0;\n    }\n  }\n\n  game.matrix = matrix;\n}\n\nfunction renderNums() {\n  for (let rowIndex = 0; rowIndex < game.matrix.length; rowIndex++) {\n    const row = game.matrix[rowIndex];\n\n    row.forEach((cellValue, cellIndex) => {\n      const renderedCell = rows[rowIndex].children[cellIndex];\n\n      renderedCell.className = 'field-cell';\n      renderedCell.textContent = '';\n\n      if (cellValue !== 0) {\n        renderedCell.classList.add('field-cell--' + cellValue);\n        renderedCell.textContent = cellValue;\n      }\n    });\n  }\n\n  scoreInfo.textContent = game.score;\n}\n\nfunction addNum() {\n  const num = Math.random() > 0.1 ? 2 : 4;\n\n  for (;;) {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (game.matrix[row][col] === 0) {\n      game.matrix[row][col] = num;\n      break;\n    }\n  }\n}\n\nfunction toggleHidden(block, dependence) {\n  block.classList.toggle('hidden', dependence);\n}\n\nfunction reflectMatrix(matrix) {\n  const columns = [];\n\n  for (let i = 0; i < matrix.length; i++) {\n    columns.push([]);\n\n    for (let n = 0; n < matrix[i].length; n++) {\n      columns[i].push(matrix[n][i]);\n    }\n  }\n\n  return columns;\n}\n\nfunction checkVictory(matrix) {\n  for (const row of matrix) {\n    const has2048 = row.some(num => num === 2048);\n\n    if (has2048) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction processVictory() {\n  game.isWon = true;\n  game.isRunning = false;\n  toggleHidden(msgWin, !game.isWon);\n  toggleHidden(restartBtn, !game.isRunning);\n  toggleHidden(startBtn, game.isRunning);\n}\n\nfunction checkLose(matrix) {\n  const moveVariants = [\n    checkDirections.moveLeft(matrix),\n    checkDirections.moveRight(matrix),\n    checkDirections.moveUp(matrix),\n    checkDirections.moveDown(matrix),\n  ];\n\n  const checkResult = moveVariants.some(variant => variant === true);\n\n  return !checkResult;\n}\n\nfunction processLose() {\n  game.isRunning = false;\n  game.isLost = true;\n  toggleHidden(msgLose, !game.isLost);\n}\n"]}